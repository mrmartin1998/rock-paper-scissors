{
  "contractName": "RockPaperScissors",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "result",
          "type": "string"
        }
      ],
      "name": "GameResult",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "enum RockPaperScissors.Move",
          "name": "playerMove",
          "type": "uint8"
        }
      ],
      "name": "play",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"name\":\"GameResult\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"enum RockPaperScissors.Move\",\"name\":\"playerMove\",\"type\":\"uint8\"}],\"name\":\"play\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/RockPaperScissors.sol\":\"RockPaperScissors\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/RockPaperScissors.sol\":{\"keccak256\":\"0x54ea89f11f848815def3d610957c4cdd88bcfbbe9bffdcc8d93fef476b6707b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b2ea8ba454f6c31cebfaa5f75ea01e89b480f42e3f8efdda22906dc414d026b\",\"dweb:/ipfs/QmV1wNhx5AYx2DnEom9ehohWuQX7ymu817YYWgJ51oYPF6\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061070f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806353a04b0514610030575b600080fd5b61004a6004803603810190610045919061053f565b610060565b60405161005791906105d3565b60405180910390f35b6060600060034260405160200161007791906105b8565b6040516020818303038152906040528051906020012060001c61009a9190610658565b905060008160028111156100d7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b90506060816002811115610114577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b85600281111561014d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610190576040518060400160405280600c81526020017f497427732061206472617721000000000000000000000000000000000000000081525090506104e8565b600060028111156101ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b856002811115610203577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14801561027f5750600280811115610244577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82600281111561027d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b8061037557506002808111156102be577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8560028111156102f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610374575060016002811115610339577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826002811115610372577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b5b8061046c5750600160028111156103b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8560028111156103ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14801561046b575060006002811115610430577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826002811115610469577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b5b156104ae576040518060400160405280600c81526020017f506c617965722077696e7321000000000000000000000000000000000000000081525090506104e7565b6040518060400160405280600e81526020017f436f6d70757465722077696e732100000000000000000000000000000000000081525090505b5b7f7a4de1685bde7e678248f7dc86ee1bd74b93de9036bb3a87d406a80832eba0178160405161051791906105d3565b60405180910390a1809350505050919050565b600081359050610539816106c9565b92915050565b60006020828403121561055157600080fd5b600061055f8482850161052a565b91505092915050565b6000610573826105f5565b61057d8185610600565b935061058d81856020860161061b565b610596816106b8565b840191505092915050565b6105b26105ad82610611565b61064e565b82525050565b60006105c482846105a1565b60208201915081905092915050565b600060208201905081810360008301526105ed8184610568565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b60005b8381101561063957808201518184015260208101905061061e565b83811115610648576000848401525b50505050565b6000819050919050565b600061066382610611565b915061066e83610611565b92508261067e5761067d610689565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b600381106106d657600080fd5b5056fea2646970667358221220f195e8c6545cd604fe263dd27e19f7546a83eba8e7d4439b580b2ff4a8d97bd764736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806353a04b0514610030575b600080fd5b61004a6004803603810190610045919061053f565b610060565b60405161005791906105d3565b60405180910390f35b6060600060034260405160200161007791906105b8565b6040516020818303038152906040528051906020012060001c61009a9190610658565b905060008160028111156100d7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b90506060816002811115610114577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b85600281111561014d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610190576040518060400160405280600c81526020017f497427732061206472617721000000000000000000000000000000000000000081525090506104e8565b600060028111156101ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b856002811115610203577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14801561027f5750600280811115610244577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82600281111561027d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b8061037557506002808111156102be577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8560028111156102f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610374575060016002811115610339577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826002811115610372577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b5b8061046c5750600160028111156103b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8560028111156103ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14801561046b575060006002811115610430577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826002811115610469577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b5b156104ae576040518060400160405280600c81526020017f506c617965722077696e7321000000000000000000000000000000000000000081525090506104e7565b6040518060400160405280600e81526020017f436f6d70757465722077696e732100000000000000000000000000000000000081525090505b5b7f7a4de1685bde7e678248f7dc86ee1bd74b93de9036bb3a87d406a80832eba0178160405161051791906105d3565b60405180910390a1809350505050919050565b600081359050610539816106c9565b92915050565b60006020828403121561055157600080fd5b600061055f8482850161052a565b91505092915050565b6000610573826105f5565b61057d8185610600565b935061058d81856020860161061b565b610596816106b8565b840191505092915050565b6105b26105ad82610611565b61064e565b82525050565b60006105c482846105a1565b60208201915081905092915050565b600060208201905081810360008301526105ed8184610568565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b60005b8381101561063957808201518184015260208101905061061e565b83811115610648576000848401525b50505050565b6000819050919050565b600061066382610611565b915061066e83610611565b92508261067e5761067d610689565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b600381106106d657600080fd5b5056fea2646970667358221220f195e8c6545cd604fe263dd27e19f7546a83eba8e7d4439b580b2ff4a8d97bd764736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2908:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "66:94:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "76:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "98:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "85:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "85:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "76:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "148:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_Move_$45",
                      "nodeType": "YulIdentifier",
                      "src": "114:33:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:40:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "114:40:2"
                }
              ]
            },
            "name": "abi_decode_t_enum$_Move_$45",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "52:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:2",
                "type": ""
              }
            ],
            "src": "7:153:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "239:203:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "285:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "294:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "297:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "287:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "287:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "287:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "260:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "269:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "256:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "256:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "281:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "252:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "249:2:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "311:124:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "326:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "340:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "330:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "355:70:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "397:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "408:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "393:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "393:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "417:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Move_$45",
                          "nodeType": "YulIdentifier",
                          "src": "365:27:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "365:60:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "355:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_Move_$45",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "209:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "220:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "232:6:2",
                "type": ""
              }
            ],
            "src": "166:276:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "540:272:2",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "550:53:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "597:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "564:32:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "564:39:2"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "554:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "612:78:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "678:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "683:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "619:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "619:71:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "612:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "725:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "732:4:2",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "721:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "721:16:2"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "739:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "744:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "699:21:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "699:52:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "699:52:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "760:46:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "771:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "798:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "776:21:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "776:29:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "767:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:39:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "760:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "521:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "528:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "536:3:2",
                "type": ""
              }
            ],
            "src": "448:364:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "901:74:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "918:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "961:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "943:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "943:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "923:19:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "923:45:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "911:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "911:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "911:58:2"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "889:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "896:3:2",
                "type": ""
              }
            ],
            "src": "818:157:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1097:140:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1170:6:2"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1179:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1108:61:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1108:75:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1108:75:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1192:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1203:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1208:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1199:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1199:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1192:3:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1221:10:2",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1228:3:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1221:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1076:3:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1082:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1093:3:2",
                "type": ""
              }
            ],
            "src": "981:256:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1361:195:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1371:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1383:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1394:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1379:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1379:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1371:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1418:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1429:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1414:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1414:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1437:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1443:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1433:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1433:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1407:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1407:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1407:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1463:86:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1535:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1544:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1471:63:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1471:78:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1463:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1333:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1345:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1356:4:2",
                "type": ""
              }
            ],
            "src": "1243:313:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1621:40:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1632:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1648:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1642:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1642:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1632:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1604:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1614:6:2",
                "type": ""
              }
            ],
            "src": "1562:99:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1763:73:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1780:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1785:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1773:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1773:19:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1773:19:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1801:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1820:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1825:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1816:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1816:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1801:11:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1735:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1740:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1751:11:2",
                "type": ""
              }
            ],
            "src": "1667:169:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1887:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1897:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1908:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1897:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1869:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1879:7:2",
                "type": ""
              }
            ],
            "src": "1842:77:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1974:258:2",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1984:10:2",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1993:1:2",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1988:1:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2053:63:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2078:3:2"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2083:1:2"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2074:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2074:11:2"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2097:3:2"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2102:1:2"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2093:3:2"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2093:11:2"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2087:5:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2087:18:2"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2067:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2067:39:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2067:39:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2014:1:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2017:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2011:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2011:13:2"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2025:19:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2027:15:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2036:1:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2039:2:2",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2032:3:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2032:10:2"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2027:1:2"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2007:3:2",
                    "statements": []
                  },
                  "src": "2003:113:2"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2150:76:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2200:3:2"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2205:6:2"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2196:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2196:16:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2214:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2189:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2189:27:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2189:27:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2131:1:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2134:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2128:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2128:13:2"
                  },
                  "nodeType": "YulIf",
                  "src": "2125:2:2"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1956:3:2",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "1961:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1966:6:2",
                "type": ""
              }
            ],
            "src": "1925:307:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2285:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2295:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2306:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "2295:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2267:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "2277:7:2",
                "type": ""
              }
            ],
            "src": "2238:79:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2357:142:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2367:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2390:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2372:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2372:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "2367:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2401:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2424:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2406:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2406:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "2401:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2448:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "2450:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2450:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2450:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2445:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2438:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2438:9:2"
                  },
                  "nodeType": "YulIf",
                  "src": "2435:2:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2479:14:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2488:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2491:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "2484:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "2479:1:2"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2346:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2349:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "2355:1:2",
                "type": ""
              }
            ],
            "src": "2323:176:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2533:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2550:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2553:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2543:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2543:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2543:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2647:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2650:4:2",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2640:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2640:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2640:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2671:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2674:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2664:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2664:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2664:15:2"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "2505:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2739:54:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2749:38:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2767:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2774:2:2",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2763:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2763:14:2"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2783:2:2",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2779:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2779:7:2"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2759:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2759:28:2"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "2749:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2722:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "2732:6:2",
                "type": ""
              }
            ],
            "src": "2691:102:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2849:56:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2883:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2892:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2895:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2885:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2885:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2885:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2872:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2879:1:2",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2869:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2869:12:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2862:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2862:20:2"
                  },
                  "nodeType": "YulIf",
                  "src": "2859:2:2"
                }
              ]
            },
            "name": "validator_revert_t_enum$_Move_$45",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2842:5:2",
                "type": ""
              }
            ],
            "src": "2799:106:2"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_enum$_Move_$45(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Move_$45(value)\n    }\n\n    function abi_decode_tuple_t_enum$_Move_$45(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Move_$45(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_enum$_Move_$45(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "60:937:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "60:937:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;227:767;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;274:13;300:17;373:1;352:15;335:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;325:44;;;;;;320:50;;:54;;;;:::i;:::-;300:74;;385:13;406:12;401:18;;;;;;;;;;;;;;;;385:34;;430:21;481:8;467:22;;;;;;;;;;;;;;;;:10;:22;;;;;;;;;;;;;;;;;464:410;;;506:24;;;;;;;;;;;;;;;;;;;464:410;;;567:9;553:23;;;;;;;;;;;;;;;;:10;:23;;;;;;;;;;;;;;;;;:52;;;;;592:13;580:25;;;;;;;;;;;;;;;;:8;:25;;;;;;;;;;;;;;;;;553:52;552:134;;;;646:13;632:27;;;;;;;;;;;;;;;;:10;:27;;;;;;;;;;;;;;;;;:53;;;;;675:10;663:22;;;;;;;;;;;;;;;;:8;:22;;;;;;;;;;;;;;;;;632:53;552:134;:210;;;;726:10;712:24;;;;;;;;;;;;;;;;:10;:24;;;;;;;;;;;;;;;;;:49;;;;;752:9;740:21;;;;;;;;;;;;;;;;:8;:21;;;;;;;;;;;;;;;;;712:49;552:210;548:326;;;779:24;;;;;;;;;;;;;;;;;;;548:326;;;836:26;;;;;;;;;;;;;;;;;;;548:326;464:410;899:19;910:7;899:19;;;;;;:::i;:::-;;;;;;;;979:7;972:14;;;;;227:767;;;:::o;7:153:2:-;;98:6;85:20;76:29;;114:40;148:5;114:40;:::i;:::-;66:94;;;;:::o;166:276::-;;281:2;269:9;260:7;256:23;252:32;249:2;;;297:1;294;287:12;249:2;340:1;365:60;417:7;408:6;397:9;393:22;365:60;:::i;:::-;355:70;;311:124;239:203;;;;:::o;448:364::-;;564:39;597:5;564:39;:::i;:::-;619:71;683:6;678:3;619:71;:::i;:::-;612:78;;699:52;744:6;739:3;732:4;725:5;721:16;699:52;:::i;:::-;776:29;798:6;776:29;:::i;:::-;771:3;767:39;760:46;;540:272;;;;;:::o;818:157::-;923:45;943:24;961:5;943:24;:::i;:::-;923:45;:::i;:::-;918:3;911:58;901:74;;:::o;981:256::-;;1108:75;1179:3;1170:6;1108:75;:::i;:::-;1208:2;1203:3;1199:12;1192:19;;1228:3;1221:10;;1097:140;;;;:::o;1243:313::-;;1394:2;1383:9;1379:18;1371:26;;1443:9;1437:4;1433:20;1429:1;1418:9;1414:17;1407:47;1471:78;1544:4;1535:6;1471:78;:::i;:::-;1463:86;;1361:195;;;;:::o;1562:99::-;;1648:5;1642:12;1632:22;;1621:40;;;:::o;1667:169::-;;1785:6;1780:3;1773:19;1825:4;1820:3;1816:14;1801:29;;1763:73;;;;:::o;1842:77::-;;1908:5;1897:16;;1887:32;;;:::o;1925:307::-;1993:1;2003:113;2017:6;2014:1;2011:13;2003:113;;;2102:1;2097:3;2093:11;2087:18;2083:1;2078:3;2074:11;2067:39;2039:2;2036:1;2032:10;2027:15;;2003:113;;;2134:6;2131:1;2128:13;2125:2;;;2214:1;2205:6;2200:3;2196:16;2189:27;2125:2;1974:258;;;;:::o;2238:79::-;;2306:5;2295:16;;2285:32;;;:::o;2323:176::-;;2372:20;2390:1;2372:20;:::i;:::-;2367:25;;2406:20;2424:1;2406:20;:::i;:::-;2401:25;;2445:1;2435:2;;2450:18;;:::i;:::-;2435:2;2491:1;2488;2484:9;2479:14;;2357:142;;;;:::o;2505:180::-;2553:77;2550:1;2543:88;2650:4;2647:1;2640:15;2674:4;2671:1;2664:15;2691:102;;2783:2;2779:7;2774:2;2767:5;2763:14;2759:28;2749:38;;2739:54;;;:::o;2799:106::-;2879:1;2872:5;2869:12;2859:2;;2895:1;2892;2885:12;2859:2;2849:56;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract RockPaperScissors {\r\n    enum Move { Rock, Paper, Scissors }\r\n    \r\n    // Event to emit the result of the game.\r\n    event GameResult(string result);\r\n\r\n    function play(Move playerMove) public returns (string memory) {\r\n        uint computerMove = uint(keccak256(abi.encodePacked(block.timestamp))) % 3;\r\n        Move compMove = Move(computerMove);\r\n        string memory outcome;\r\n\r\n        if(playerMove == compMove) {\r\n            outcome = \"It's a draw!\";\r\n        } else if ((playerMove == Move.Rock && compMove == Move.Scissors) || \r\n                   (playerMove == Move.Scissors && compMove == Move.Paper) || \r\n                   (playerMove == Move.Paper && compMove == Move.Rock)) {\r\n            outcome = \"Player wins!\";\r\n        } else {\r\n            outcome = \"Computer wins!\";\r\n        }\r\n        \r\n        emit GameResult(outcome); // Emitting the event with the game result\r\n        return outcome;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\marti\\Documents\\projects\\rock-paper-scissors\\contracts\\RockPaperScissors.sol",
  "ast": {
    "absolutePath": "project:/contracts/RockPaperScissors.sol",
    "exportedSymbols": {
      "RockPaperScissors": [
        142
      ]
    },
    "id": 143,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 41,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 142,
        "linearizedBaseContracts": [
          142
        ],
        "name": "RockPaperScissors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "RockPaperScissors.Move",
            "id": 45,
            "members": [
              {
                "id": 42,
                "name": "Rock",
                "nodeType": "EnumValue",
                "src": "106:4:1"
              },
              {
                "id": 43,
                "name": "Paper",
                "nodeType": "EnumValue",
                "src": "112:5:1"
              },
              {
                "id": 44,
                "name": "Scissors",
                "nodeType": "EnumValue",
                "src": "119:8:1"
              }
            ],
            "name": "Move",
            "nodeType": "EnumDefinition",
            "src": "94:35:1"
          },
          {
            "anonymous": false,
            "id": 49,
            "name": "GameResult",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "204:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "204:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "203:15:1"
            },
            "src": "187:32:1"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "289:705:1",
              "statements": [
                {
                  "assignments": [
                    58
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58,
                      "mutability": "mutable",
                      "name": "computerMove",
                      "nodeType": "VariableDeclaration",
                      "scope": 140,
                      "src": "300:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 57,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "300:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 71,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 64,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "352:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 65,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "352:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 62,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "335:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 63,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "335:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 66,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "335:33:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 61,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "325:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "325:44:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "320:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 59,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "320:4:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "320:50:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "hexValue": "33",
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "373:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "320:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "300:74:1"
                },
                {
                  "assignments": [
                    74
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74,
                      "mutability": "mutable",
                      "name": "compMove",
                      "nodeType": "VariableDeclaration",
                      "scope": 140,
                      "src": "385:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Move_$45",
                        "typeString": "enum RockPaperScissors.Move"
                      },
                      "typeName": {
                        "id": 73,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 72,
                          "name": "Move",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45,
                          "src": "385:4:1"
                        },
                        "referencedDeclaration": 45,
                        "src": "385:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Move_$45",
                          "typeString": "enum RockPaperScissors.Move"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 76,
                        "name": "computerMove",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "406:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 75,
                      "name": "Move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "401:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Move_$45_$",
                        "typeString": "type(enum RockPaperScissors.Move)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "401:18:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Move_$45",
                      "typeString": "enum RockPaperScissors.Move"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "385:34:1"
                },
                {
                  "assignments": [
                    80
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80,
                      "mutability": "mutable",
                      "name": "outcome",
                      "nodeType": "VariableDeclaration",
                      "scope": 140,
                      "src": "430:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 79,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "430:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "430:21:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Move_$45",
                      "typeString": "enum RockPaperScissors.Move"
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 82,
                      "name": "playerMove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "467:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Move_$45",
                        "typeString": "enum RockPaperScissors.Move"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 83,
                      "name": "compMove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "481:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Move_$45",
                        "typeString": "enum RockPaperScissors.Move"
                      }
                    },
                    "src": "467:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Move_$45",
                                  "typeString": "enum RockPaperScissors.Move"
                                },
                                "id": 93,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 90,
                                  "name": "playerMove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52,
                                  "src": "553:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Move_$45",
                                    "typeString": "enum RockPaperScissors.Move"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 91,
                                    "name": "Move",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45,
                                    "src": "567:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Move_$45_$",
                                      "typeString": "type(enum RockPaperScissors.Move)"
                                    }
                                  },
                                  "id": 92,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Rock",
                                  "nodeType": "MemberAccess",
                                  "src": "567:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Move_$45",
                                    "typeString": "enum RockPaperScissors.Move"
                                  }
                                },
                                "src": "553:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Move_$45",
                                  "typeString": "enum RockPaperScissors.Move"
                                },
                                "id": 97,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 94,
                                  "name": "compMove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74,
                                  "src": "580:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Move_$45",
                                    "typeString": "enum RockPaperScissors.Move"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 95,
                                    "name": "Move",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45,
                                    "src": "592:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Move_$45_$",
                                      "typeString": "type(enum RockPaperScissors.Move)"
                                    }
                                  },
                                  "id": 96,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Scissors",
                                  "nodeType": "MemberAccess",
                                  "src": "592:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Move_$45",
                                    "typeString": "enum RockPaperScissors.Move"
                                  }
                                },
                                "src": "580:25:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "553:52:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 99,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "552:54:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Move_$45",
                                  "typeString": "enum RockPaperScissors.Move"
                                },
                                "id": 103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 100,
                                  "name": "playerMove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52,
                                  "src": "632:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Move_$45",
                                    "typeString": "enum RockPaperScissors.Move"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 101,
                                    "name": "Move",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45,
                                    "src": "646:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Move_$45_$",
                                      "typeString": "type(enum RockPaperScissors.Move)"
                                    }
                                  },
                                  "id": 102,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Scissors",
                                  "nodeType": "MemberAccess",
                                  "src": "646:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Move_$45",
                                    "typeString": "enum RockPaperScissors.Move"
                                  }
                                },
                                "src": "632:27:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Move_$45",
                                  "typeString": "enum RockPaperScissors.Move"
                                },
                                "id": 107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 104,
                                  "name": "compMove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74,
                                  "src": "663:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Move_$45",
                                    "typeString": "enum RockPaperScissors.Move"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 105,
                                    "name": "Move",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45,
                                    "src": "675:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Move_$45_$",
                                      "typeString": "type(enum RockPaperScissors.Move)"
                                    }
                                  },
                                  "id": 106,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Paper",
                                  "nodeType": "MemberAccess",
                                  "src": "675:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Move_$45",
                                    "typeString": "enum RockPaperScissors.Move"
                                  }
                                },
                                "src": "663:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "632:53:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 109,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "631:55:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "552:134:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Move_$45",
                                "typeString": "enum RockPaperScissors.Move"
                              },
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 111,
                                "name": "playerMove",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52,
                                "src": "712:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Move_$45",
                                  "typeString": "enum RockPaperScissors.Move"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 112,
                                  "name": "Move",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "726:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Move_$45_$",
                                    "typeString": "type(enum RockPaperScissors.Move)"
                                  }
                                },
                                "id": 113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Paper",
                                "nodeType": "MemberAccess",
                                "src": "726:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Move_$45",
                                  "typeString": "enum RockPaperScissors.Move"
                                }
                              },
                              "src": "712:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Move_$45",
                                "typeString": "enum RockPaperScissors.Move"
                              },
                              "id": 118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 115,
                                "name": "compMove",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74,
                                "src": "740:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Move_$45",
                                  "typeString": "enum RockPaperScissors.Move"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 116,
                                  "name": "Move",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "752:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Move_$45_$",
                                    "typeString": "type(enum RockPaperScissors.Move)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Rock",
                                "nodeType": "MemberAccess",
                                "src": "752:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Move_$45",
                                  "typeString": "enum RockPaperScissors.Move"
                                }
                              },
                              "src": "740:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "712:49:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 120,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "711:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "552:210:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 131,
                      "nodeType": "Block",
                      "src": "821:53:1",
                      "statements": [
                        {
                          "expression": {
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 127,
                              "name": "outcome",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "836:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "436f6d70757465722077696e7321",
                              "id": 128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "846:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e24ef3856032ef77867e3cc71b4dec0fe71b4967c3f03f9fbc5bf932947a8a08",
                                "typeString": "literal_string \"Computer wins!\""
                              },
                              "value": "Computer wins!"
                            },
                            "src": "836:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "id": 130,
                          "nodeType": "ExpressionStatement",
                          "src": "836:26:1"
                        }
                      ]
                    },
                    "id": 132,
                    "nodeType": "IfStatement",
                    "src": "548:326:1",
                    "trueBody": {
                      "id": 126,
                      "nodeType": "Block",
                      "src": "764:51:1",
                      "statements": [
                        {
                          "expression": {
                            "id": 124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 122,
                              "name": "outcome",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "779:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "506c617965722077696e7321",
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "789:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2a051354efb709512fdf3899faec21d8557c4def5c94cd11d9dbc69a533695e6",
                                "typeString": "literal_string \"Player wins!\""
                              },
                              "value": "Player wins!"
                            },
                            "src": "779:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "id": 125,
                          "nodeType": "ExpressionStatement",
                          "src": "779:24:1"
                        }
                      ]
                    }
                  },
                  "id": 133,
                  "nodeType": "IfStatement",
                  "src": "464:410:1",
                  "trueBody": {
                    "id": 89,
                    "nodeType": "Block",
                    "src": "491:51:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 85,
                            "name": "outcome",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "506:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "497427732061206472617721",
                            "id": 86,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "516:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c0bcde082809436e0e32ec5d724e6b175b00d91421868e49a20528f72d9695d8",
                              "typeString": "literal_string \"It's a draw!\""
                            },
                            "value": "It's a draw!"
                          },
                          "src": "506:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 88,
                        "nodeType": "ExpressionStatement",
                        "src": "506:24:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 135,
                        "name": "outcome",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "910:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 134,
                      "name": "GameResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "899:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "899:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "EmitStatement",
                  "src": "894:24:1"
                },
                {
                  "expression": {
                    "id": 138,
                    "name": "outcome",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80,
                    "src": "979:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 56,
                  "id": 139,
                  "nodeType": "Return",
                  "src": "972:14:1"
                }
              ]
            },
            "functionSelector": "53a04b05",
            "id": 141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "play",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "playerMove",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "241:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Move_$45",
                    "typeString": "enum RockPaperScissors.Move"
                  },
                  "typeName": {
                    "id": 51,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50,
                      "name": "Move",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45,
                      "src": "241:4:1"
                    },
                    "referencedDeclaration": 45,
                    "src": "241:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Move_$45",
                      "typeString": "enum RockPaperScissors.Move"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "240:17:1"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "274:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "273:15:1"
            },
            "scope": 142,
            "src": "227:767:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 143,
        "src": "60:937:1"
      }
    ],
    "src": "33:966:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xc1FB05267a5Bc91B0d17C1A7101A24D09CdC553e",
      "transactionHash": "0x2194abd5056959e8a3ade95b95fb29bb40abbe26d213aa091a8234398f200d6e"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-01-04T13:57:30.615Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}